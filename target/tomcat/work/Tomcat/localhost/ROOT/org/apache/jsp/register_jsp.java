/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.56
 * Generated at: 2022-11-02 01:08:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>register</title>\r\n");
      out.write("    <script src=\"jquery-3.5.1/jquery-3.5.1.js\"></script>\r\n");
      out.write("    <link href=\"css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("    <style>\r\n");
      out.write("        .modal-sheet .modal-dialog {\r\n");
      out.write("            width: 380px;\r\n");
      out.write("            transition: bottom .75s ease-in-out;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-sheet .modal-footer {\r\n");
      out.write("            padding-bottom: 2rem;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-alert .modal-dialog {\r\n");
      out.write("            width: 380px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal-tour .modal-dialog {\r\n");
      out.write("            width: 380px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<br><br><br><br><br><br><br>\r\n");
      out.write("<div class=\"modal modal-signin position-static d-block  py-5\" tabindex=\"-1\" role=\"dialog\" id=\"modalSignin\">\r\n");
      out.write("    <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content rounded-4 shadow\">\r\n");
      out.write("            <div class=\"modal-header p-5 pb-4 border-bottom-0\">\r\n");
      out.write("                <!-- <h1 class=\"modal-title fs-5\" >Modal title</h1> -->\r\n");
      out.write("                <h1 class=\"fw-bold mb-0 fs-2\">免费注册</h1>\r\n");
      out.write("                <a href=\"login.jsp\">已经有账号？点此返回登录界面</a>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"modal-body p-5 pt-0\">\r\n");
      out.write("                <!-- 注册表单开始 -->\r\n");
      out.write("                <form action=\"Register\" class=\"\">\r\n");
      out.write("                    <div class=\"form-floating mb-3\">\r\n");
      out.write("                        <!-- 新用户 -->\r\n");
      out.write("                        <input type=\"text\" class=\"form-control rounded-3\" id=\"newUser\" placeholder=\"name@example.com\"\r\n");
      out.write("                               name=\"username\">\r\n");
      out.write("                        <label for=\"newUser\">Your name</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-floating mb-3\">\r\n");
      out.write("                        <!-- 新密码 -->\r\n");
      out.write("                        <input type=\"password\" class=\"form-control rounded-3\" id=\"newPassword\" placeholder=\"Password\"\r\n");
      out.write("                               name=\"password\">\r\n");
      out.write("                        <label for=\"newPassword\">Password</label>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <!-- 提交按钮 -->\r\n");
      out.write("                    <button class=\"w-100 mb-2 btn btn-lg rounded-3 btn-primary\" type=\"submit\">注册</button>\r\n");
      out.write("                    <small class=\"text-muted\">点击注册，即表示您同意使用条款</small><br>\r\n");
      out.write("                    <small class=\"text-muted\">最终解释权归产品方所有</small>\r\n");
      out.write("                    <hr class=\"my-4\">\r\n");
      out.write("                </form>\r\n");
      out.write("                <!-- 表单结束 -->\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
